{"version":3,"sources":["../../example/index.js"],"names":["promise1","Promise","resolve","JSON","parse","promise2","a","b","index","toPath","fromPath","correspond","then","console","log","stringify","data","remove","move","value","path","callback","catch","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,QAAIA,WAAWC,QAAQC,OAAR,CAAgBC,KAAKC,KAAL,gBAAhB,CAAf;AACA,QAAIC,WAAWJ,QAAQC,OAAR,CAAgBC,KAAKC,KAAL,gBAAhB,CAAf;;AAEA,2BACI;AACIE,WAAGH,KAAKC,KAAL,gBADP;AAEIG,WAAGJ,KAAKC,KAAL;AAFP,KADJ,EAKI;AACII,eAAO,CACH;AACIC,oBAAQ,QADZ;AAEIC,sBAAU,sCAFd;AAGIC,wBAAY,KAHhB,CAGsB;AAHtB,SADG,EAMH;AACIF,oBAAQ,wBADZ;AAEIC,sBAAU;AAFd,SANG;AADX,KALJ,EAkBEE,IAlBF,CAkBO,gBAAQ;AACXC,gBAAQC,GAAR,CAAYX,KAAKY,SAAL,CAAeC,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAZ;AACH,KApBD;;AAsBA,wBAAY;AACRV,WAAGN,QADK;AAERO,WAAGF;AAFK,KAAZ,EAICG,KAJD,CAIO,CACH;AACIC,gBAAQ,QADZ;AAEIC,kBAAU,sCAFd;AAGIC,oBAAY,KAHhB,CAGsB;AAHtB,KADG,EAMH;AACIF,gBAAQ,wBADZ;AAEIC,kBAAU;AAFd,KANG,CAJP,EAeCO,MAfD,CAeQ,CAAC,WAAD,CAfR,EAgBCT,KAhBD,CAgBO,CACH;AACIC,gBAAQ,aADZ;AAEIC,kBAAU,QAFd;AAGIQ,cAAM,IAHV,CAGgB;AAHhB,KADG,CAhBP,EAuBCC,KAvBD,CAuBO,CACH;AACIC,cAAM,uBADV,EACqC;AACjCD,eAAO,CAAC,IAAD,EAAO,MAAP,EAAe,IAAf;AAFX,KADG,EAKH;AACIC,cAAM,uBADV;AAEIC,gBAFJ,oBAEaF,KAFb,EAEoBX,KAFpB,EAE2B;AAAI;AACvB,mBAAOW,QAAQX,KAAf;AACH;AAJL,KALG,CAvBP,EAmCCI,IAnCD,CAmCM,gBAAQ;AACV;AACH,KArCD,EAqCGU,KArCH,CAqCS,UAACC,CAAD,EAAO;AACZ;AACH,KAvCD","file":"index.js","sourcesContent":["import Adapter, {DataAdapter} from \"../src/index\";\nimport data1 from './data1.js';\nimport data2 from './data2.js';\n\nlet promise1 = Promise.resolve(JSON.parse(data1));\nlet promise2 = Promise.resolve(JSON.parse(data2));\n\nnew DataAdapter(\n    {\n        a: JSON.parse(data1),\n        b: JSON.parse(data2)\n    },\n    {\n        index: [\n            {\n                toPath: 'pathId',\n                fromPath: 'a.data.children.[].attributes.pathId',\n                correspond: false // 可选：将多项目标数据拼成数组后赋值给源数据\n            },\n            {\n                toPath: 'a.data.children.[].pid',\n                fromPath: 'a.data.children.[].attributes.pathId'\n            }\n        ]\n    }\n).then(data => {\n    console.log(JSON.stringify(data, null, 4));\n});\n\nnew Adapter({\n    a: promise1,\n    b: promise2\n})\n.index([\n    {\n        toPath: 'pathId',\n        fromPath: 'a.data.children.[].attributes.pathId',\n        correspond: false // 可选：将多项目标数据拼成数组后赋值给源数据\n    },\n    {\n        toPath: 'a.data.children.[].pid',\n        fromPath: 'a.data.children.[].attributes.pathId'\n    }\n])\n.remove(['a.message'])\n.index([\n    {\n        toPath: 'a.testIndex',\n        fromPath: 'b.data',\n        move: true  // 可选\n    }\n])\n.value([\n    {\n        path: 'a.data.children.[].id',   // 等长会一一对应\n        value: ['ha', 'test', '99']\n    },\n    {\n        path: 'a.data.children.[].id',\n        callback(value, index) {   // 可选\n            return value + index;\n        }\n    }\n])\n.then(data => {\n    // console.log(JSON.stringify(data, null, 4));\n}).catch((e) => {\n    // console.log(e);\n});\n"]}